{"ast":null,"code":"var _jsxFileName = \"D:\\\\H\\u1ECCC K\\xCC\\\\N\\u0103m III\\\\Reactjs\\\\reactJS\\\\demobeta\\\\src\\\\App.js\";\nimport './App.css';\nimport data from './data.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  const addTodo = data => {\n    let input = document.getElementById(\"myInput\");\n    // Kiểm tra nếu input tồn tại và có giá trị\n    if (input && input.value.trim() !== \"\") {\n      data.push({\n        id: data.length + 1,\n        name: input.value.trim(),\n        status: 1\n      });\n      console.log(data);\n\n      // Clear input sau khi thêm\n      input.value = \"\";\n    } else {\n      console.log(\"Input is empty or not found!\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"myDIV\",\n      class: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          margin: \"5px\"\n        },\n        children: \"My To Do List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"myInput\",\n        placeholder: \"Title...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: addTodo(data),\n        class: \"addBtn\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      id: \"myUL\",\n      children: data.map(e => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: e.name\n      }, e.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["data","jsxDEV","_jsxDEV","App","addTodo","input","document","getElementById","value","trim","push","id","length","name","status","console","log","class","children","style","margin","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onClick","map","e","_c","$RefreshReg$"],"sources":["D:/HỌC KÌ/Năm III/Reactjs/reactJS/demobeta/src/App.js"],"sourcesContent":["import './App.css'\nimport data from'./data.json'\nfunction App() {\n  const addTodo = (data) => {\n    let input = document.getElementById(\"myInput\")\n     // Kiểm tra nếu input tồn tại và có giá trị\n     if (input && input.value.trim() !== \"\") {\n      data.push({id: data.length + 1, name: input.value.trim(), status: 1});\n      console.log(data);\n      \n      // Clear input sau khi thêm\n      input.value = \"\";\n  } else {\n      console.log(\"Input is empty or not found!\");\n  }\n  }\n  return (\n    <div class=\"container\">\n      <div id=\"myDIV\" class=\"header\">\n        <h2 style={{margin:\"5px\"}}>My To Do List</h2>\n        <input type=\"text\" id=\"myInput\" placeholder=\"Title...\"/>\n          <span onClick={addTodo(data)} class=\"addBtn\">Add</span>\n      </div>\n      <ul id=\"myUL\">\n        {\n          data.map((e)=> \n            <li key={e.id}>{e.name}</li>\n          )\n        }\n      </ul>\n      \n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAO,WAAW;AAClB,OAAOA,IAAI,MAAK,aAAa;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAC7B,SAASC,GAAGA,CAAA,EAAG;EACb,MAAMC,OAAO,GAAIJ,IAAI,IAAK;IACxB,IAAIK,KAAK,GAAGC,QAAQ,CAACC,cAAc,CAAC,SAAS,CAAC;IAC7C;IACA,IAAIF,KAAK,IAAIA,KAAK,CAACG,KAAK,CAACC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MACvCT,IAAI,CAACU,IAAI,CAAC;QAACC,EAAE,EAAEX,IAAI,CAACY,MAAM,GAAG,CAAC;QAAEC,IAAI,EAAER,KAAK,CAACG,KAAK,CAACC,IAAI,CAAC,CAAC;QAAEK,MAAM,EAAE;MAAC,CAAC,CAAC;MACrEC,OAAO,CAACC,GAAG,CAAChB,IAAI,CAAC;;MAEjB;MACAK,KAAK,CAACG,KAAK,GAAG,EAAE;IACpB,CAAC,MAAM;MACHO,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;IAC/C;EACA,CAAC;EACD,oBACEd,OAAA;IAAKe,KAAK,EAAC,WAAW;IAAAC,QAAA,gBACpBhB,OAAA;MAAKS,EAAE,EAAC,OAAO;MAACM,KAAK,EAAC,QAAQ;MAAAC,QAAA,gBAC5BhB,OAAA;QAAIiB,KAAK,EAAE;UAACC,MAAM,EAAC;QAAK,CAAE;QAAAF,QAAA,EAAC;MAAa;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC7CtB,OAAA;QAAOuB,IAAI,EAAC,MAAM;QAACd,EAAE,EAAC,SAAS;QAACe,WAAW,EAAC;MAAU;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACtDtB,OAAA;QAAMyB,OAAO,EAAEvB,OAAO,CAACJ,IAAI,CAAE;QAACiB,KAAK,EAAC,QAAQ;QAAAC,QAAA,EAAC;MAAG;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtD,CAAC,eACNtB,OAAA;MAAIS,EAAE,EAAC,MAAM;MAAAO,QAAA,EAETlB,IAAI,CAAC4B,GAAG,CAAEC,CAAC,iBACT3B,OAAA;QAAAgB,QAAA,EAAgBW,CAAC,CAAChB;MAAI,GAAbgB,CAAC,CAAClB,EAAE;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAc,CAC7B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAED,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEF,CAAC;AAEV;AAACM,EAAA,GA/BQ3B,GAAG;AAiCZ,eAAeA,GAAG;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}